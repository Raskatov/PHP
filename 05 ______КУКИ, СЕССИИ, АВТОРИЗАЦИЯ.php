<?php

/*АУТЕНТИФИКАЦИЯ И АВТОРИЗАЦИЯ
Аутентификация - это проверка соответствия субъекта и того, за кого он пытается себя выдать.
Авторизация - это проверка и определение полномочий на выполнение некоторых действий.*/


/*HTTP КОДЫ 401 И 403
401 – если неверно выполнена аутентификация или отсутствует вовсе.
403 – Если доступ к запрашиваемому ресурсу запрещен, но при этом пользователь может быть авторизован*/


/*HTTP COOKIES
• небольшой фрагмент данных, отправленный веб сервером и хранимый на компьютере пользователя
• для чтения чтения используется переменная $_ COOKIE.*/



/*СОЗДАНИЕ HTTP COOKIES
• $name – имя (строка),
• $value – значение (строка),
• $expire = 0 – через сколько секунд умрет (отсчет с 01.01.1970 ),
• $path = null – по какому пути доступна,
• $domain = null – по какому домену доступна,
• $secure = false – передается только по HTTPS,
• $httponly = false – доступны только по HTTP протоколу
*/



/*СОЗДАНИЕ HTTP COOKIES */
//Если в имени указать [] то при получении значения получится массив:
setcookie ('items[one]', 'cookie_one');
echo $_COOKIE ["item"][ "one"]; // cookie_one
//Установка куки куки на час:
setcookie ('items[one]', 'cookie_one', time() + 3600);

//УДАЛЕНИЕ HTTP COOKIES
//Можно удалить данные:
setcookie ('items[one]', null);
//Можно полностью удалить куку:
setcookie ('items[one]', 'cookie_one', time() - 1);



/*СЕССИИ
• Это то механизм, позволяющий однозначно идентифицировать браузер и создающий
для этого браузера файл на сервере, в котором хранятся переменные сеанса.
• Для того чтобы получить данные из этого файла, нужно знать
идентификатор этой сессии (26 символов). */



/* ИДЕНТИФИКАТОР СЕССИИ
• Идентификатор (PHPSESSID) сессии может хранится в куках.
• Идентификатор можно передать только двумя способами: в куках или POST/GET запросом.
• После закрытия браузера (или через определенный промежуток времени) кука с ID сессии удаляется. */


/* SESSION_START()
• Инициализирует новую сессию если в запросе нет ID сессии или он не валидный
• Заполняет суперглобальный $_SESSION данными из файла сессий
• В случае создания новой сессии устанавливает заголовок ответа для записи куки c ID сессии
*/


/* СЕССИИ И ЗАГОЛОВКИ
• При первом запросе, у клиента нет в куках идентификатора сессии, и поэтому сервер при
открытии сессии посылает заголовок:*/
Set -Cookie: PHPSESSID=h7dphkjlq0j53iacmmts76eul4; path=/
/*• При последующих запросах клиент уже отправляет эту куку c идентификатором сессии в заголовке:*/
Cookie:PHPSESSID=h7dphkjlq0j53iacmmts76eul4



/*РАБОТА С СЕССИЯМИ
• Старт сессии: */
session_start();
//• Получение значения:
echo $_SESSION['variable'];
//• Установка значения:
 $_SESSION['variable'] = 10;
//• Удаление значения:
unset($_SESSION['variable']);
//• Уничтожение данных сессии:
session_destroy();



//ПРИМЕР РАБОТЫ С СЕССИЕЙ
session_start();
if (isset($_GET['name'])) {
    $_SESSION['name'] = $_GET['name'];
}
if (isset($_SESSION['name'])) {
    header('HTTP/1.0 401 Unauthorized');
    exit;
}
echo 'Hello ' . htmlspecialchars($_SESSION['name']);



//СЕССИИ (ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ)

• session _id() – Идентификатор сессии
• session_name() – Ключ сессии
• session_status() - Текущий статус сессии
    • PHP_SESSION_DISABLED - не включена и не активна
    • PHP_SESSION_NONE - включена, но не активна
    • PHP_SESSION_ACTIVE - сессия включена и активна
• session_destroy() - Уничтожить сессию
• session_save_path() - Путь до папки с файлами сессии



/*ВРЕМЯ ЖИЗНИ COOKIE И СЕССИЙ*/
• session.gc_maxlifetime - время жизни файла сессии (по умолчанию 24 мин.)
• session.cookie_lifetime - время жизни куки (по умолчанию 0 - до закрытия браузера)
