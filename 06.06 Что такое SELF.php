<?php

/*ЧТО ТАКОЕ SELF?
Помните, мы говорили, что, по сути, $this - это ссылка на конкретный
объект?
self - это ссылка на сам класс, т.е. мы можем работать с теми или иными
методами без необходимости вообще создавать объекты
В связи с этим есть ещё одна особенность - в статических методах НЕТ
возможности обратиться к $this, т.к. по своей природе статические
свойства существуют и могут работать без создания экземпляров класса*/


// ЧТО ТАКОЕ SELF? (Ч.2)
class SimpleClass
{
  public $publicProperty;
  public static $staticProperty = 0; //статическое свойство
  public static function staticMethod() //статический метод
  {
    echo self::$staticProperty;//всё ок
    echo $this->publicProperty; //ошибка - нет доступа
  }
}

/*НЕБОЛЬШОЙ ЛАЙФХАК
А теперь совсем интересно - изменяя статическое свойство, мы изменяем
его для всех объектов . Круто, да?*/
class SimpleClass
{
  public static $staticProperty = 0; //статическое свойство
  public function __construct()
  {
    //при вызове конструктора меняем статическое свойство
    self::$staticProperty++;
  }
}

/*НЕБОЛЬШОЙ ЛАЙФХАК (Ч.2)*/
echo SimpleClass::$staticProperty; //выведет 0, всё ок
$object = new SimpleClass(); //тут вызвался конструктор
$anotherObject = new SimpleClass(); //и тут вызвался конструктор
$thirdObject = new SimpleClass(); // и даже тут
echo SimpleClass::$staticProperty; // выведет 3


/*ПЫТАЕМСЯ ПОНЯТЬ
1. Статические свойства и методы принадлежат классу, а не объекту.
Объект может их менять, но меняет в классе. Как следствие, это свойства,
которые для всех объектов общие.
2. Скорее всего вам не понадобятся статические свойства и методы в
ближайшем будущем, но помнить об этом нужно
3. В ряде случаев есть необходимость добавить метод, который никак не
завязан на внутренние параметры. Статические методы - хороший способ.
4. В ряде случаев вам захочется собрать логику в одном месте, но
создание объекта будет избыточным (например, запрос)*/

/*ПЫТАЕМСЯ ПОНЯТЬ (Ч.2)
1. Как это использовать на практике? Ну, на нашем примере, мы можем
захотеть давать скидку на каждый второй товар. И для этого нужно
понимать, сколько вообще товаров было добавлено в корзину.
2. А вообще - использование статических свойств нужно крайне редко. Я
бы рекомендовал так: если в методе не используются внутренние
свойства объекта - делайте его статическим. Но даже это не обязательно.*/
